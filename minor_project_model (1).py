# -*- coding: utf-8 -*-
"""minor_project_model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ljRZCBB9ievev5tNb_9lV8ZLbbwEeoXt

**Step1: Gathering the data**
"""

import tensorflow as tf
import pandas as pd
import numpy as np


(x_train, y_train), (x_test, y_test)=tf.keras.datasets.mnist.load_data(path="mnist.npz")

"""**Step2: Preprocessing**

"""

x_train=x_train/255
x_test=x_test/255

"""**Step3: Neural network Architecture**"""

model=tf.keras.Sequential()
model.add(tf.keras.layers.Flatten(input_shape=x_train[0].shape))
model.add(tf.keras.layers.Dense(1568,activation='relu'))
model.add(tf.keras.layers.Dense(1568,activation='relu'))
model.add(tf.keras.layers.Dense(10,activation='softmax'))

model.summary()

"""**Step-4: Compilation**"""

model.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])

"""**Step-5:fitting the model**"""

model.fit(x_train,y_train,epochs=10)

import pandas as pd
acc=pd.DataFrame(model.history.history['accuracy']).plot()

loss=pd.DataFrame(model.history.history['loss']).plot()

"""**Step6:Predicting the model**"""

import numpy as np
y_predict=model.predict(x_test)
y_predict=np.argmax(y_predict,axis=1)
y_predict

from sklearn.metrics import accuracy_score, confusion_matrix
accuracy_score(y_predict,y_test)

"""**Save the model**"""

model.save('digit_recogniser.hdf5')

