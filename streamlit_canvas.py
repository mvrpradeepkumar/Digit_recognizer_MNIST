# -*- coding: utf-8 -*-
"""streamlit_canvas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gy8cI_gvwNtj8FvAQDbyk0B59K9R60M3
"""

!pip install streamlit --quiet
!pip install pyngrok==4.1.1 --quiet
!pip install streamlit-drawable-canvas
from pyngrok import ngrok

import tensorflow as tf
model = tf.keras.models.load_model('digit_recogniser.hdf5')

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import tensorflow as tf
# import numpy as np
# import cv2
# from google.colab.patches import cv2_imshow
# model = tf.keras.models.load_model('digit_recogniser.hdf5')
# from streamlit_drawable_canvas import st_canvas
# st.title('Minor Project')
# 
# #Below code is copied from this website, https://pypi.org/project/streamlit-drawable-canvas/
# 
# 
# 
# 
# # Create a canvas component
# canvas_result = st_canvas(
#    
#     stroke_width=10,
#     stroke_color='#ffffff',
#     background_color='#000000',
#     width=150,
#      height=150,
#     drawing_mode='freedraw',
#     
# )
# 
# # Do something interesting with the image data and paths
# if canvas_result.image_data is not None:
#     img=cv2.resize(canvas_result.image_data.astype('uint8'),(28,28))
#     rescaled = cv2.resize(img, (150, 150), interpolation=cv2.INTER_NEAREST)
#     st.write('Model input')
#     st.image(rescaled)
#     
# if st.button('Predict'):
#   test_x= cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
#   val = model.predict(test_x.reshape(1, 28, 28))
#   st.write(f'result: {np.argmax(val[0])}')
#   st.bar_chart(val[0])

model.summary()

!nohup streamlit run app.py &
url = ngrok.connect(port='8501')
url

